openapi: 3.0.0
info:
  title: Example API
  version: 1.0.0
paths:
  /api/auth/login:
    post:
      operationId: PostApiAuthLogin
      responses:
        "200":
          description: POST /api/auth/login Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostApiAuthLoginSuccessfulResponse"
        "400":
          description: POST /api/auth/login Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - auth
      requestBody:
        description: POST /api/auth/login request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostApiAuthLoginRequestBody"
  /api/auth/register:
    post:
      operationId: PostApiAuthRegister
      responses:
        "200":
          description: POST /api/auth/register Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostApiAuthRegisterSuccessfulResponse"
        "400":
          description: POST /api/auth/register Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - auth
      requestBody:
        description: POST /api/auth/register request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostApiAuthRegisterRequestBody"
  /api/auth/logout:
    post:
      operationId: PostApiAuthLogout
      responses:
        "200":
          description: POST /api/auth/logout Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostApiAuthLogoutSuccessfulResponse"
        "400":
          description: POST /api/auth/logout Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - auth
      requestBody:
        description: POST /api/auth/logout request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostApiAuthLogoutRequestBody"
  /api/auth/user:
    get:
      operationId: GetApiAuthUser
      responses:
        "200":
          description: GET /api/auth/user Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApiAuthUserSuccessfulResponse"
        "400":
          description: GET /api/auth/user Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - auth
    put:
      operationId: PutApiAuthUser
      responses:
        "200":
          description: PUT /api/auth/user Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutApiAuthUserSuccessfulResponse"
        "400":
          description: PUT /api/auth/user Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - auth
      requestBody:
        description: PUT /api/auth/user request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutApiAuthUserRequestBody"
  /api/bookings:
    get:
      operationId: GetApiBookings
      responses:
        "200":
          description: GET /api/bookings Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApiBookingsSuccessfulResponse"
        "400":
          description: GET /api/bookings Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - booking
    post:
      operationId: PostApiBookings
      responses:
        "200":
          description: POST /api/bookings Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostApiBookingsSuccessfulResponse"
        "400":
          description: POST /api/bookings Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - booking
      requestBody:
        description: POST /api/bookings request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostApiBookingsRequestBody"
  /api/bookings/{id}:
    get:
      operationId: GetApiBookingsId
      responses:
        "200":
          description: GET /api/bookings/:id Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApiBookingsIdSuccessfulResponse"
        "400":
          description: GET /api/bookings/:id Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - booking
      parameters:
        - name: id
          in: path
          required: true
          description: GET /api/bookings/:id parameter
          schema:
            $ref: "#/components/schemas/GetApiBookingsIdParameterId"
  /api/bookings/cancel:
    post:
      operationId: PostApiBookingsCancel
      responses:
        "200":
          description: POST /api/bookings/cancel Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostApiBookingsCancelSuccessfulResponse"
        "400":
          description: POST /api/bookings/cancel Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      tags:
        - booking
      requestBody:
        description: POST /api/bookings/cancel request body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostApiBookingsCancelRequestBody"
  /api/events:
    get:
      operationId: GetApiEvents
      responses:
        "200":
          description: GET /api/events Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApiEventsSuccessfulResponse"
        "400":
          description: GET /api/events Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/events/{id}:
    get:
      operationId: GetApiEventsId
      responses:
        "200":
          description: GET /api/events/:id Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApiEventsIdSuccessfulResponse"
        "400":
          description: GET /api/events/:id Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      parameters:
        - name: id
          in: path
          required: true
          description: GET /api/events/:id parameter
          schema:
            $ref: "#/components/schemas/GetApiEventsIdParameterId"
components:
  schemas:
    PostApiAuthLoginSuccessfulResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
          required:
            - id
        success:
          type: boolean
          enum:
            - true
      required:
        - data
        - success
    ErrorResponse:
      allOf:
        - oneOf:
            - type: object
              properties:
                message:
                  type: string
              required:
                - message
            - type: object
              properties:
                messages:
                  type: array
                  items:
                    type: object
                    properties:
                      field:
                        type: string
                      message:
                        type: string
                    required:
                      - field
                      - message
              required:
                - messages
        - type: object
          properties:
            success:
              type: boolean
              enum:
                - false
          required:
            - success
    PostApiAuthLoginRequestBody:
      allOf:
        - type: object
          properties: {}
        - type: object
          properties:
            username:
              type: string
            password:
              type: string
          required:
            - username
            - password
    PostApiAuthRegisterSuccessfulResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
          required:
            - id
        success:
          type: boolean
          enum:
            - true
      required:
        - data
        - success
    PostApiAuthRegisterRequestBody:
      allOf:
        - type: object
          properties: {}
        - type: object
          properties:
            username:
              type: string
              minLength: 4
              maxLength: 20
              pattern: /^(?=[a-zA-Z0-9._]{2,20}$)(?!.*[_.]{2})[^_.].*[^_.]$/
            password:
              type: string
              minLength: 8
              maxLength: 127
            name:
              type: string
              minLength: 3
          required:
            - username
            - password
            - name
    PostApiAuthLogoutSuccessfulResponse:
      type: object
      properties:
        data:
          type: object
          properties: {}
        success:
          type: boolean
          enum:
            - true
      required:
        - data
        - success
    PostApiAuthLogoutRequestBody:
      allOf:
        - type: object
          properties: {}
        - type: object
          properties: {}
    GetApiAuthUserSuccessfulResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            user:
              nullable: true
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                username:
                  type: string
              required:
                - id
                - name
                - username
          required:
            - user
        success:
          type: boolean
          enum:
            - true
      required:
        - data
        - success
    PutApiAuthUserSuccessfulResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            username:
              type: string
          required:
            - id
            - name
            - username
        success:
          type: boolean
          enum:
            - true
      required:
        - data
        - success
    PutApiAuthUserRequestBody:
      allOf:
        - allOf:
            - allOf:
                - type: object
                  properties: {}
                - type: object
                  properties: {}
            - type: object
              properties: {}
        - type: object
          properties:
            name:
              type: string
              minLength: 3
            username:
              type: string
              minLength: 4
              maxLength: 20
              pattern: /^(?=[a-zA-Z0-9._]{2,20}$)(?!.*[_.]{2})[^_.].*[^_.]$/
          required:
            - name
            - username
    GetApiBookingsSuccessfulResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            bookings:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: number
                    format: double
                    minimum: 5e-324
                    exclusiveMinimum: false
                    maximum: 1.7976931348623157e+308
                    exclusiveMaximum: false
                  ticketBookingId:
                    nullable: true
                    type: number
                    format: double
                    minimum: 5e-324
                    exclusiveMinimum: false
                    maximum: 1.7976931348623157e+308
                    exclusiveMaximum: false
                  userId:
                    type: string
                  createdAt:
                    description: YYYY-MM-DDTHH:mm:ss.sssZ
                    type: string
                    format: date-time
                    externalDocs:
                      url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                  status:
                    type: string
                    enum:
                      - SUCCESS
                      - FAILED
                      - INPROCESS
                      - QUEUED
                      - CANCELLED
                required:
                  - id
                  - ticketBookingId
                  - userId
                  - createdAt
                  - status
          required:
            - bookings
        success:
          type: boolean
          enum:
            - true
      required:
        - data
        - success
    PostApiBookingsSuccessfulResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: number
              format: double
              minimum: 5e-324
              exclusiveMinimum: false
              maximum: 1.7976931348623157e+308
              exclusiveMaximum: false
            ticketBookingId:
              nullable: true
              type: number
              format: double
              minimum: 5e-324
              exclusiveMinimum: false
              maximum: 1.7976931348623157e+308
              exclusiveMaximum: false
            userId:
              type: string
            createdAt:
              description: YYYY-MM-DDTHH:mm:ss.sssZ
              type: string
              format: date-time
              externalDocs:
                url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
            status:
              type: string
              enum:
                - SUCCESS
                - FAILED
                - INPROCESS
                - QUEUED
                - CANCELLED
            ticketBooking:
              nullable: true
              type: object
              properties:
                id:
                  type: number
                  format: double
                  minimum: 5e-324
                  exclusiveMinimum: false
                  maximum: 1.7976931348623157e+308
                  exclusiveMaximum: false
                seat:
                  type: object
                  properties:
                    id:
                      type: number
                      format: double
                      minimum: 5e-324
                      exclusiveMinimum: false
                      maximum: 1.7976931348623157e+308
                      exclusiveMaximum: false
                    seatNumber:
                      type: number
                      format: double
                      minimum: 5e-324
                      exclusiveMinimum: false
                      maximum: 1.7976931348623157e+308
                      exclusiveMaximum: false
                    status:
                      type: string
                    eventId:
                      type: number
                      format: double
                      minimum: 5e-324
                      exclusiveMinimum: false
                      maximum: 1.7976931348623157e+308
                      exclusiveMaximum: false
                  required:
                    - id
                    - seatNumber
                    - status
                    - eventId
                status:
                  type: string
                failReason:
                  nullable: true
                  type: string
                invoiceId:
                  nullable: true
                  type: string
                paymentUrl:
                  nullable: true
                  type: string
                createdAt:
                  type: string
                updatedAt:
                  type: string
              required:
                - id
                - seat
                - status
                - failReason
                - invoiceId
                - paymentUrl
                - createdAt
                - updatedAt
          required:
            - id
            - ticketBookingId
            - userId
            - createdAt
            - status
            - ticketBooking
        success:
          type: boolean
          enum:
            - true
      required:
        - data
        - success
    PostApiBookingsRequestBody:
      allOf:
        - allOf:
            - allOf:
                - type: object
                  properties: {}
                - type: object
                  properties: {}
            - type: object
              properties: {}
        - type: object
          properties:
            seatId:
              type: integer
              format: int64
              minimum: 0
              exclusiveMinimum: true
              maximum: 9007199254740991
              exclusiveMaximum: false
          required:
            - seatId
    GetApiBookingsIdParameterId:
      type: string
    GetApiBookingsIdSuccessfulResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: number
              format: double
              minimum: 5e-324
              exclusiveMinimum: false
              maximum: 1.7976931348623157e+308
              exclusiveMaximum: false
            ticketBookingId:
              nullable: true
              type: number
              format: double
              minimum: 5e-324
              exclusiveMinimum: false
              maximum: 1.7976931348623157e+308
              exclusiveMaximum: false
            userId:
              type: string
            createdAt:
              description: YYYY-MM-DDTHH:mm:ss.sssZ
              type: string
              format: date-time
              externalDocs:
                url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
            status:
              type: string
              enum:
                - SUCCESS
                - FAILED
                - INPROCESS
                - QUEUED
                - CANCELLED
            pdfUrl:
              nullable: true
              type: string
          required:
            - id
            - ticketBookingId
            - userId
            - createdAt
            - status
            - pdfUrl
        success:
          type: boolean
          enum:
            - true
      required:
        - data
        - success
    PostApiBookingsCancelSuccessfulResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            message:
              type: string
          required:
            - message
        success:
          type: boolean
          enum:
            - true
      required:
        - data
        - success
    PostApiBookingsCancelRequestBody:
      allOf:
        - allOf:
            - allOf:
                - type: object
                  properties: {}
                - type: object
                  properties: {}
            - type: object
              properties: {}
        - type: object
          properties:
            id:
              type: integer
              format: int64
              minimum: 0
              exclusiveMinimum: true
              maximum: 9007199254740991
              exclusiveMaximum: false
          required:
            - id
    GetApiEventsSuccessfulResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            events:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    minimum: 0
                    exclusiveMinimum: true
                    maximum: 9007199254740991
                    exclusiveMaximum: false
                  title:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                    format: double
                    minimum: 0
                    exclusiveMinimum: true
                    maximum: 1.7976931348623157e+308
                    exclusiveMaximum: false
                  seatCount:
                    type: integer
                    format: int64
                    minimum: 0
                    exclusiveMinimum: true
                    maximum: 9007199254740991
                    exclusiveMaximum: false
                required:
                  - id
                  - title
                  - description
                  - price
                  - seatCount
          required:
            - events
        success:
          type: boolean
          enum:
            - true
      required:
        - data
        - success
    GetApiEventsIdParameterId:
      type: string
    GetApiEventsIdSuccessfulResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: integer
              format: int64
              minimum: 0
              exclusiveMinimum: true
              maximum: 9007199254740991
              exclusiveMaximum: false
            title:
              type: string
            description:
              type: string
            price:
              type: number
              format: double
              minimum: 0
              exclusiveMinimum: true
              maximum: 1.7976931348623157e+308
              exclusiveMaximum: false
            seats:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    minimum: 0
                    exclusiveMinimum: true
                    maximum: 9007199254740991
                    exclusiveMaximum: false
                  seatNumber:
                    type: integer
                    format: int64
                    minimum: 0
                    exclusiveMinimum: true
                    maximum: 9007199254740991
                    exclusiveMaximum: false
                  status:
                    nullable: true
                    type: string
                    enum:
                      - SUCCESS
                      - FAILED
                      - INPROCESS
                      - QUEUED
                      - CANCELLED
                  eventId:
                    type: integer
                    format: int64
                    minimum: 0
                    exclusiveMinimum: true
                    maximum: 9007199254740991
                    exclusiveMaximum: false
                required:
                  - id
                  - seatNumber
                  - status
                  - eventId
          required:
            - id
            - title
            - description
            - price
            - seats
        success:
          type: boolean
          enum:
            - true
      required:
        - data
        - success
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes: {}
  links: {}
  callbacks: {}
tags: []
servers:
  - url: http://localhost:3000
